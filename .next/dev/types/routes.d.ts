// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/auth/login" | "/auth/signup" | "/profile" | "/setup" | "/subjects" | "/subjects/[subjectId]" | "/subjects/[subjectId]/[unitId]" | "/subjects/[subjectId]/[unitId]/[topicId]" | "/subjects/[subjectId]/[unitId]/quiz"
type AppRouteHandlerRoutes = "/api/auth/login" | "/api/auth/me" | "/api/auth/signup" | "/api/create-admin" | "/api/debug" | "/api/seed" | "/api/subjects" | "/api/subjects/[subjectId]" | "/api/test" | "/api/topics/[topicId]" | "/api/units/[unitId]" | "/api/units/[unitId]/quiz"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/api/auth/login": {}
  "/api/auth/me": {}
  "/api/auth/signup": {}
  "/api/create-admin": {}
  "/api/debug": {}
  "/api/seed": {}
  "/api/subjects": {}
  "/api/subjects/[subjectId]": { "subjectId": string; }
  "/api/test": {}
  "/api/topics/[topicId]": { "topicId": string; }
  "/api/units/[unitId]": { "unitId": string; }
  "/api/units/[unitId]/quiz": { "unitId": string; }
  "/auth/login": {}
  "/auth/signup": {}
  "/profile": {}
  "/setup": {}
  "/subjects": {}
  "/subjects/[subjectId]": { "subjectId": string; }
  "/subjects/[subjectId]/[unitId]": { "subjectId": string; "unitId": string; }
  "/subjects/[subjectId]/[unitId]/[topicId]": { "subjectId": string; "unitId": string; "topicId": string; }
  "/subjects/[subjectId]/[unitId]/quiz": { "subjectId": string; "unitId": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
