{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAErF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/components/quiz-component.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { motion } from 'framer-motion'\nimport { CheckCircle, XCircle, Clock, Award } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Progress } from '@/components/ui/progress'\n\ninterface Question {\n  id: string\n  question: string\n  options: string[]\n  correctAnswer: number\n  explanation?: string\n}\n\ninterface QuizComponentProps {\n  questions: Question[]\n  title: string\n  timeLimit?: number\n  onComplete: (score: number, answers: Record<string, number>) => void\n}\n\nexport default function QuizComponent({ questions, title, timeLimit = 30, onComplete }: QuizComponentProps) {\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [answers, setAnswers] = useState<Record<string, number>>({})\n  const [showResults, setShowResults] = useState(false)\n  const [timeLeft, setTimeLeft] = useState(timeLimit * 60) // Convert to seconds\n  const [quizStarted, setQuizStarted] = useState(false)\n\n  const handleAnswerSelect = (questionId: string, answerIndex: number) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }))\n  }\n\n  const handleNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1)\n    } else {\n      handleSubmit()\n    }\n  }\n\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1)\n    }\n  }\n\n  const handleSubmit = () => {\n    const score = calculateScore()\n    setShowResults(true)\n    onComplete(score, answers)\n  }\n\n  const calculateScore = () => {\n    let correct = 0\n    questions.forEach(question => {\n      if (answers[question.id] === question.correctAnswer) {\n        correct++\n      }\n    })\n    return Math.round((correct / questions.length) * 100)\n  }\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}:${secs.toString().padStart(2, '0')}`\n  }\n\n  if (!quizStarted) {\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"max-w-2xl mx-auto\"\n      >\n        <Card>\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-2xl\">{title}</CardTitle>\n            <CardDescription>\n              Test your knowledge with this quiz\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-center\">\n              <div className=\"p-4 bg-muted/50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-primary\">{questions.length}</div>\n                <div className=\"text-sm text-muted-foreground\">Questions</div>\n              </div>\n              <div className=\"p-4 bg-muted/50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-primary\">{timeLimit}</div>\n                <div className=\"text-sm text-muted-foreground\">Minutes</div>\n              </div>\n              <div className=\"p-4 bg-muted/50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-primary\">MCQ</div>\n                <div className=\"text-sm text-muted-foreground\">Format</div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold\">Instructions:</h3>\n              <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                <li>• Choose the best answer for each question</li>\n                <li>• You can navigate between questions</li>\n                <li>• Submit when you're ready or when time runs out</li>\n                <li>• You'll see your results immediately after submission</li>\n              </ul>\n            </div>\n\n            <Button \n              className=\"w-full\" \n              size=\"lg\"\n              onClick={() => setQuizStarted(true)}\n            >\n              Start Quiz\n            </Button>\n          </CardContent>\n        </Card>\n      </motion.div>\n    )\n  }\n\n  if (showResults) {\n    const score = calculateScore()\n    const correctAnswers = questions.filter(q => answers[q.id] === q.correctAnswer).length\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"max-w-4xl mx-auto space-y-6\"\n      >\n        {/* Results Summary */}\n        <Card>\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-2xl flex items-center justify-center space-x-2\">\n              <Award className=\"h-6 w-6 text-primary\" />\n              <span>Quiz Results</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-center mb-6\">\n              <div className=\"text-4xl font-bold text-primary mb-2\">{score}%</div>\n              <p className=\"text-muted-foreground\">\n                You got {correctAnswers} out of {questions.length} questions correct\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-600\">{correctAnswers}</div>\n                <div className=\"text-sm text-green-600\">Correct</div>\n              </div>\n              <div className=\"text-center p-4 bg-red-50 dark:bg-red-900/20 rounded-lg\">\n                <div className=\"text-2xl font-bold text-red-600\">{questions.length - correctAnswers}</div>\n                <div className=\"text-sm text-red-600\">Incorrect</div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-600\">{score >= 70 ? 'Pass' : 'Fail'}</div>\n                <div className=\"text-sm text-blue-600\">Result</div>\n              </div>\n            </div>\n\n            <Progress value={score} className=\"h-3 mb-4\" />\n          </CardContent>\n        </Card>\n\n        {/* Detailed Results */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Question Review</CardTitle>\n            <CardDescription>\n              Review your answers and explanations\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            {questions.map((question, index) => {\n              const userAnswer = answers[question.id]\n              const isCorrect = userAnswer === question.correctAnswer\n\n              return (\n                <div key={question.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start space-x-3 mb-4\">\n                    {isCorrect ? (\n                      <CheckCircle className=\"h-5 w-5 text-green-500 mt-1\" />\n                    ) : (\n                      <XCircle className=\"h-5 w-5 text-red-500 mt-1\" />\n                    )}\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-medium mb-2\">\n                        Question {index + 1}: {question.question}\n                      </h4>\n                      \n                      <div className=\"space-y-2 mb-4\">\n                        {question.options.map((option, optionIndex) => (\n                          <div\n                            key={optionIndex}\n                            className={`p-2 rounded text-sm ${\n                              optionIndex === question.correctAnswer\n                                ? 'bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-200'\n                                : optionIndex === userAnswer && !isCorrect\n                                ? 'bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-200'\n                                : 'bg-muted/50'\n                            }`}\n                          >\n                            {String.fromCharCode(65 + optionIndex)}. {option}\n                            {optionIndex === question.correctAnswer && (\n                              <span className=\"ml-2 font-medium\">(Correct)</span>\n                            )}\n                            {optionIndex === userAnswer && !isCorrect && (\n                              <span className=\"ml-2 font-medium\">(Your answer)</span>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n\n                      {question.explanation && (\n                        <div className=\"bg-blue-50 dark:bg-blue-900/20 p-3 rounded text-sm\">\n                          <strong>Explanation:</strong> {question.explanation}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </CardContent>\n        </Card>\n      </motion.div>\n    )\n  }\n\n  const currentQ = questions[currentQuestion]\n  const progress = ((currentQuestion + 1) / questions.length) * 100\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.6 }}\n      className=\"max-w-3xl mx-auto\"\n    >\n      {/* Quiz Header */}\n      <Card className=\"mb-6\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-sm font-medium\">\n                Question {currentQuestion + 1} of {questions.length}\n              </span>\n              <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                <Clock className=\"h-4 w-4\" />\n                <span>{formatTime(timeLeft)}</span>\n              </div>\n            </div>\n          </div>\n          <Progress value={progress} className=\"h-2\" />\n        </CardContent>\n      </Card>\n\n      {/* Question */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-xl\">{currentQ.question}</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-3\">\n            {currentQ.options.map((option, index) => (\n              <button\n                key={index}\n                onClick={() => handleAnswerSelect(currentQ.id, index)}\n                className={`w-full p-4 text-left rounded-lg border transition-colors ${\n                  answers[currentQ.id] === index\n                    ? 'border-primary bg-primary/10'\n                    : 'border-border hover:bg-muted/50'\n                }`}\n              >\n                <span className=\"font-medium mr-3\">\n                  {String.fromCharCode(65 + index)}.\n                </span>\n                {option}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"flex justify-between pt-6\">\n            <Button\n              variant=\"outline\"\n              onClick={handlePrevious}\n              disabled={currentQuestion === 0}\n            >\n              Previous\n            </Button>\n            \n            <Button\n              onClick={handleNext}\n              disabled={answers[currentQ.id] === undefined}\n            >\n              {currentQuestion === questions.length - 1 ? 'Submit Quiz' : 'Next'}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </motion.div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/app/subjects/%5BsubjectId%5D/%5BunitId%5D/quiz/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport Link from 'next/link'\nimport { useParams } from 'next/navigation'\nimport { motion } from 'framer-motion'\nimport { ArrowLeft } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport QuizComponent from '@/components/quiz-component'\n\n// Mock quiz data - in real app, this would come from API\nconst quizData = {\n  'arrays-strings': {\n    title: 'Arrays and Strings Quiz',\n    timeLimit: 20,\n    questions: [\n      {\n        id: 'q1',\n        question: 'What is the time complexity of accessing an element in an array by index?',\n        options: ['O(1)', 'O(n)', 'O(log n)', 'O(n²)'],\n        correctAnswer: 0,\n        explanation: 'Array elements can be accessed directly using their index, which takes constant time O(1).'\n      },\n      {\n        id: 'q2',\n        question: 'Which of the following is NOT a characteristic of arrays?',\n        options: [\n          'Elements are stored in contiguous memory locations',\n          'All elements must be of the same data type',\n          'Dynamic size that can change during runtime',\n          'Zero-based indexing in most programming languages'\n        ],\n        correctAnswer: 2,\n        explanation: 'Arrays typically have a fixed size that is determined at creation time. Dynamic arrays or lists can change size, but traditional arrays cannot.'\n      },\n      {\n        id: 'q3',\n        question: 'What is the worst-case time complexity for searching an element in an unsorted array?',\n        options: ['O(1)', 'O(log n)', 'O(n)', 'O(n log n)'],\n        correctAnswer: 2,\n        explanation: 'In the worst case, we might need to check every element in the array, resulting in O(n) time complexity.'\n      },\n      {\n        id: 'q4',\n        question: 'Which string operation typically has O(n) time complexity where n is the length of the string?',\n        options: [\n          'Accessing a character by index',\n          'Finding the length of the string',\n          'Concatenating two strings',\n          'Comparing two characters'\n        ],\n        correctAnswer: 2,\n        explanation: 'String concatenation typically requires creating a new string and copying all characters, which takes O(n) time.'\n      },\n      {\n        id: 'q5',\n        question: 'In the two pointers technique, what is the typical starting position of the pointers?',\n        options: [\n          'Both at the beginning',\n          'Both at the end',\n          'One at the beginning, one at the end',\n          'One at the middle, one at the end'\n        ],\n        correctAnswer: 2,\n        explanation: 'The two pointers technique typically starts with one pointer at the beginning and one at the end of the array, then moves them towards each other.'\n      },\n      {\n        id: 'q6',\n        question: 'What is the main advantage of the sliding window technique?',\n        options: [\n          'It uses less memory',\n          'It reduces time complexity from O(n²) to O(n)',\n          'It works only with sorted arrays',\n          'It can handle negative numbers'\n        ],\n        correctAnswer: 1,\n        explanation: 'The sliding window technique optimizes problems by avoiding redundant calculations, often reducing time complexity from O(n²) to O(n).'\n      },\n      {\n        id: 'q7',\n        question: 'Which of the following is the correct way to declare an array in JavaScript?',\n        options: [\n          'let arr = array[5];',\n          'let arr = new Array(5);',\n          'let arr = Array<5>;',\n          'let arr = [5]array;'\n        ],\n        correctAnswer: 1,\n        explanation: 'In JavaScript, you can declare an array using \"new Array(size)\" or array literal notation like \"let arr = []\".'\n      },\n      {\n        id: 'q8',\n        question: 'What happens when you try to access an array element beyond its bounds in most programming languages?',\n        options: [\n          'Returns null',\n          'Returns undefined or throws an error',\n          'Returns the last element',\n          'Automatically extends the array'\n        ],\n        correctAnswer: 1,\n        explanation: 'Accessing an array beyond its bounds typically returns undefined (JavaScript) or throws an error (Java, C++), depending on the language.'\n      }\n    ]\n  }\n}\n\nexport default function QuizPage() {\n  const params = useParams()\n  const { subjectId, unitId } = params\n  const [quizCompleted, setQuizCompleted] = useState(false)\n  const [quizScore, setQuizScore] = useState(0)\n\n  const quiz = quizData[unitId as string]\n\n  const handleQuizComplete = async (score: number, answers: Record<string, number>) => {\n    setQuizScore(score)\n    setQuizCompleted(true)\n\n    // Save quiz results to backend\n    const token = localStorage.getItem('token')\n    if (token) {\n      try {\n        await fetch(`/api/quiz/${unitId}/submit`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            subjectId,\n            unitId,\n            score,\n            answers,\n            totalQuestions: quiz.questions.length\n          })\n        })\n      } catch (error) {\n        console.error('Error saving quiz results:', error)\n      }\n    }\n  }\n\n  if (!quiz) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Quiz not found</h1>\n          <Link href={`/subjects/${subjectId}/${unitId}`}>\n            <Button>← Back to Unit</Button>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Back Button */}\n      <motion.div\n        initial={{ opacity: 0, x: -20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"mb-6\"\n      >\n        <Link href={`/subjects/${subjectId}/${unitId}`}>\n          <Button variant=\"ghost\" className=\"mb-4\">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Unit\n          </Button>\n        </Link>\n      </motion.div>\n\n      {/* Quiz Component */}\n      <QuizComponent\n        questions={quiz.questions}\n        title={quiz.title}\n        timeLimit={quiz.timeLimit}\n        onComplete={handleQuizComplete}\n      />\n\n      {/* Post-Quiz Actions */}\n      {quizCompleted && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.5 }}\n          className=\"mt-8 text-center\"\n        >\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href={`/subjects/${subjectId}/${unitId}`}>\n              <Button variant=\"outline\">\n                Back to Unit\n              </Button>\n            </Link>\n            <Link href={`/subjects/${subjectId}`}>\n              <Button>\n                Continue Learning\n              </Button>\n            </Link>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}