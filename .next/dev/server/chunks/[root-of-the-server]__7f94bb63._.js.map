{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n\n  try {\n    cached.conn = await cached.promise;\n  } catch (e) {\n    cached.promise = null;\n    throw e;\n  }\n\n  return cached.conn;\n}\n\nexport default dbConnect;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,yDAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACX,SAAS,yDAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AACzD;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,oHAAQ,CAAC,OAAO,CAAC,aAAa,MAAM,IAAI,CAAC,CAAC;YACzD,OAAO;QACT;IACF;IAEA,IAAI;QACF,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACpC,EAAE,OAAO,GAAG;QACV,OAAO,OAAO,GAAG;QACjB,MAAM;IACR;IAEA,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/models/Subject.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nexport interface ISubject extends mongoose.Document {\n  title: string;\n  description: string;\n  image: string;\n  category: 'frontend' | 'backend' | 'core' | 'ai-ml';\n  units: mongoose.Types.ObjectId[];\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst SubjectSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'Please provide a subject title'],\n    maxlength: [100, 'Title cannot be more than 100 characters'],\n  },\n  description: {\n    type: String,\n    required: [true, 'Please provide a description'],\n    maxlength: [500, 'Description cannot be more than 500 characters'],\n  },\n  image: {\n    type: String,\n    required: [true, 'Please provide an image URL'],\n  },\n  category: {\n    type: String,\n    enum: ['frontend', 'backend', 'core', 'ai-ml'],\n    required: [true, 'Please specify a category'],\n  },\n  units: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Unit',\n  }],\n}, {\n  timestamps: true,\n});\n\nexport default mongoose.models.Subject || mongoose.model<ISubject>('Subject', SubjectSchema);"],"names":[],"mappings":";;;;AAAA;;AAYA,MAAM,gBAAgB,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACxC,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAiC;QAClD,WAAW;YAAC;YAAK;SAA2C;IAC9D;IACA,aAAa;QACX,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;QAChD,WAAW;YAAC;YAAK;SAAiD;IACpE;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAA8B;IACjD;IACA,UAAU;QACR,MAAM;QACN,MAAM;YAAC;YAAY;YAAW;YAAQ;SAAQ;QAC9C,UAAU;YAAC;YAAM;SAA4B;IAC/C;IACA,OAAO;QAAC;YACN,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACP;KAAE;AACJ,GAAG;IACD,YAAY;AACd;uCAEe,oHAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,oHAAQ,CAAC,KAAK,CAAW,WAAW","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///Users/aayu/Desktop/online%20LSM/cse-learning-platform/src/app/api/subjects/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport dbConnect from '@/lib/db'\nimport Subject from '@/models/Subject'\n\nexport async function GET(request: NextRequest) {\n  try {\n    await dbConnect()\n\n    const { searchParams } = new URL(request.url)\n    const category = searchParams.get('category')\n    const search = searchParams.get('search')\n\n    let query = {}\n\n    if (category && category !== 'all') {\n      query = { ...query, category }\n    }\n\n    if (search) {\n      query = {\n        ...query,\n        $or: [\n          { title: { $regex: search, $options: 'i' } },\n          { description: { $regex: search, $options: 'i' } }\n        ]\n      }\n    }\n\n    const subjects = await Subject.find(query)\n      .populate('units')\n      .sort({ createdAt: 1 })\n\n    return NextResponse.json(subjects)\n  } catch (error) {\n    console.error('Error fetching subjects:', error)\n    return NextResponse.json(\n      { message: 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,IAAA,6HAAS;QAEf,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC;QAClC,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,IAAI,QAAQ,CAAC;QAEb,IAAI,YAAY,aAAa,OAAO;YAClC,QAAQ;gBAAE,GAAG,KAAK;gBAAE;YAAS;QAC/B;QAEA,IAAI,QAAQ;YACV,QAAQ;gBACN,GAAG,KAAK;gBACR,KAAK;oBACH;wBAAE,OAAO;4BAAE,QAAQ;4BAAQ,UAAU;wBAAI;oBAAE;oBAC3C;wBAAE,aAAa;4BAAE,QAAQ;4BAAQ,UAAU;wBAAI;oBAAE;iBAClD;YACH;QACF;QAEA,MAAM,WAAW,MAAM,qIAAO,CAAC,IAAI,CAAC,OACjC,QAAQ,CAAC,SACT,IAAI,CAAC;YAAE,WAAW;QAAE;QAEvB,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}