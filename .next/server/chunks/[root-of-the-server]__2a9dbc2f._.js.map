{"version":3,"sources":["turbopack:///[project]/src/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose'\n\nconst MONGODB_URI = process.env.MONGODB_URI!\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local')\n}\n\ninterface MongooseCache {\n  conn: typeof mongoose | null\n  promise: Promise<typeof mongoose> | null\n}\n\ndeclare global {\n  var mongoose: MongooseCache | undefined\n}\n\nlet cached = global.mongoose\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null }\n}\n\nasync function dbConnect(): Promise<typeof mongoose> {\n  if (cached!.conn) {\n    return cached!.conn\n  }\n\n  if (!cached!.promise) {\n    const opts = {\n      bufferCommands: false,\n    }\n\n    cached!.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      return mongoose\n    })\n  }\n\n  try {\n    cached!.conn = await cached!.promise\n  } catch (e) {\n    cached!.promise = null\n    throw e\n  }\n\n  return cached!.conn\n}\n\nexport default dbConnect"],"names":[],"mappings":"sjCAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OAEA,IAAM,EAAc,QAAQ,GAAG,CAAC,WAAW,CAE3C,GAAI,CAAC,EACH,MAAM,AAAI,KADM,CACA,wEAYlB,IAAI,EAAS,OAAO,QAAQ,CAM5B,eAAe,IACb,GAAI,EAAQ,IAAI,CACd,CADgB,MACT,EAAQ,IAAI,CAGhB,EAAQ,OAAO,EAAE,CAKpB,EAAQ,OAAO,CAAG,EAAA,OAAQ,CAAC,OAAO,CAAC,EAJtB,CACX,UAG8C,MAH9B,CAClB,GAEsD,IAAI,CAAC,AAAC,GACnD,EACT,EAGF,GAAI,CACF,EAAQ,IAAI,CAAG,MAAM,EAAQ,OAAO,AACtC,CAAE,MAAO,EAAG,CAEV,MADA,EAAQ,OAAO,CAAG,KACZ,CACR,CAEA,OAAO,EAAQ,IAAI,AACrB,CA3BI,AAAC,IACH,EAAS,EADE,KACK,QAAQ,CAAG,CAAE,KAAM,KAAM,QAAS,IAAK,oBA4B1C"}